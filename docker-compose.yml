services:

  app:
    build: .
    image: task-management-system-1.0.0
    restart: always
    container_name: task-management-system-container
    env_file:
      - .env
    environment:
      DATABASE_URL: jdbc:postgresql://localhost:5436/taskdb #${DATABASE_URL}
      DATABASE_PASSWORD: chocolatefrog #${DATABASE_PASSWORD}
      DATABASE_USERNAME: javaguru #${DATABASE_USERNAME}
      JWT_SECRET_PHRASE: $2y$10$UQ2zBJlzw9IUW3wDqmrHpx5EvqIJkOiKWc35jzz9lKe2dFXEDRO #${JWT_SECRET_PHRASE}
      CORS_ALLOWED_ORIGINS: none #${CORS_ALLOWED_ORIGINS}
      CORS_ALLOWED_METHODS: none #${CORS_ALLOWED_METHODS}
    ports:
      - "8080:8080"
    volumes:
      - ./var/our_image_storage:/var/our_image_storage
    depends_on:
      - tasks-db


  tasks-db:
    image: postgres:14
    #build: postgres:14
    restart: always
    container_name: tasks-system-db
    env_file:
      - .env
    ports:
      - "5436:5432"
    environment:
      POSTGRES_DB: taskdb #${POSTGRES_DB}
      POSTGRES_USER: javaguru #${POSTGRES_USER}
      POSTGRES_PASSWORD: chocolatefrog #${POSTGRES_PASSWORD}
    volumes:
      - tasks-system-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "javaguru" ]
      interval: 10s
      retries: 3

volumes:
  tasks-system-db-volume: